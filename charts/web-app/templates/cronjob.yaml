{{- if .Values.cronjob.enabled }}

apiVersion: batch/v1
kind: CronJob
metadata:
  name: '{{ include "cronjob_name" $ }}'
spec:
  schedule: "{{- .Values.cronjob.schedule -}}"
  jobTemplate:
    spec:
      template:
        spec:
          hostIPC: false
          hostNetwork: false
          hostPID: false
          securityContext:
            runAsUser: 115
            runAsGroup: 125
            fsGroup: 190
            supplementalGroups:
              - 150
          restartPolicy: Never
          containers:
          - name: http
            image: '{{ include "cron_image" $ }}'
            imagePullPolicy: IfNotPresent

            securityContext:
              allowPrivilegeEscalation: false
              privileged: false
              procMount: Default
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              seccompProfile:
                type: RuntimeDefault

            {{- if .Values.deployment.enabled }}
            args:
            - {{ include "service_name" $ -}}.{{- .Release.Namespace -}}.svc:443/{{- .Values.cronjob.endpoint }}
            - key=$(SECRET_KEY)
            - --ignore-stdin
            {{- end }}

            env:
            {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 }}
            {{- end }}

            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: auth-key
            - name: API_URL
              value: https://{{- include "api_domain" $ }}

            {{- if .Values.email.enabled }}
            - name: EMAILER_EMAIL
              value: {{ .Values.email.sender }}
            {{- if .Values.email.mfa }}
            - name: EMAILER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: email-sender-password
            {{- end }}
            {{- end }}


{{- end }}
