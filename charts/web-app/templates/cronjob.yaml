{{- if .Values.enabled }}
{{- if .Values.cronjob.enabled }}

apiVersion: batch/v1
kind: CronJob
metadata:
  name: '{{ include "cronjob_name" $ }}-cronjob'
spec:
  schedule: "{{- .Values.cronjob.schedule -}}"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: '{{ include "ksa_name" . }}'
          restartPolicy: Never

          hostIPC: false
          hostNetwork: false
          hostPID: false

          securityContext:
            runAsUser: 115
            runAsGroup: 125
            fsGroup: 190
            supplementalGroups:
              - 150

          volumes:
          - name: tmp-dir
            emptyDir: {}

          containers:
          - name: job
            image: '{{ include "cron_image" $ }}'
            imagePullPolicy: IfNotPresent

            resources:
              requests:
                memory: {{ required "REQUIRED: memory.request" .Values.memory.request }}
                cpu: {{ required "REQUIRED: cpu.request" .Values.cpu.request }}
              limits:
                memory: {{ required "REQUIRED: memory.limit" .Values.memory.limit }}
                cpu: {{ required "REQUIRED: cpu.limit" .Values.cpu.limit }}

            volumeMounts:
            - mountPath: /tmp
              name: tmp-dir

            securityContext:
              allowPrivilegeEscalation: false
              privileged: false
              procMount: Default
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              seccompProfile:
                type: RuntimeDefault

            {{- if .Values.deployment.enabled }}
            args:
            - {{ include "service_name" $ -}}.{{- .Release.Namespace -}}.svc:443/{{- .Values.cronjob.endpoint }}
            - x-access-token:$(SECRET_KEY)
            - --ignore-stdin
            {{- end }}

            env:
            {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 }}
            {{- end }}

            - name: LIFECYCLE
              value: {{ upper .Values.lifecycle }}

            {{- if .Values.aws.auth.enabled }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: aws-id

            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: aws-secret
            {{- end }}

            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: auth-key

            - name: TMP_PATH
              value: "/tmp"

            {{- if .Values.google.storage.enabled }}

            {{- range .Values.google.storage.bucket_list }}
            - name: GOOGLE_STORAGE_{{ .key }}
              value: {{ include "microservice_label" $ -}}-{{- .name }}
            {{- end }}

            {{- range .Values.google.storage.external_bucket_list }}
            - name: GOOGLE_STORAGE_{{ .key }}

              {{- if .prefix }}
              {{- if ne $.Values.cpl_cluster_name $.Values.cluster_name }}
              value: {{ .prefix -}}-{{ $.Values.cluster_name -}}-{{- include "lifecycle" $ -}}-{{- .external_service -}}-{{- .name }}
              {{- else }}
              value: {{ .prefix -}}-{{ include "lifecycle" $ -}}-{{- .external_service -}}-{{- .name }}
              {{- end }}
              {{- else }}

              {{- if ne $.Values.cpl_cluster_name $.Values.cluster_name }}
              value: {{ $.Values.cluster_name -}}-{{- include "lifecycle" $ -}}-{{- .external_service -}}-{{- .name }}
              {{- else }}
              value: {{ include "lifecycle" $ -}}-{{- .external_service -}}-{{- .name }}
              {{- end }}
              {{- end }}
            {{- end }}

            {{- end }}

            {{- if .Values.email.enabled }}
            - name: EMAILER_EMAIL
              value: {{ .Values.email.sender }}
            {{- if .Values.email.mfa }}
            - name: EMAILER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: email-sender-password
            {{- end }}
            {{- end }}


{{- end }}
{{- end }}
