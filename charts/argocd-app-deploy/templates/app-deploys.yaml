---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: {{ include "fullname" $ -}}-services-deploy
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  labels:
    tier: app
    purpose: deploy
    deployment: helm
spec:
  generators:
  - git:
      repoURL: git@github.com:{{- required "github_org" .Values.github_org -}}/{{- required "repo_name" .Values.repo_name -}}.git
      revision: {{ .Values.revision }}
      files:
      - path: {{ include "services_filepath" $ }}
  template:
    metadata:
      name: '{{ "{{ app.lifecycle }}" }}-{{- .Values.app_name -}}-{{ "{{ path.basename }}" }}-deploy'
      labels:
        deployment: helm
        tier: app
        purpose: deploy
        app: {{ .Values.app_name }}
        service: '{{ "{{ path.basename }}" }}'
        lifecycle: '{{ "{{ app.lifecycle }}" }}'
      annotations:
        argocd-image-updater.argoproj.io/image-list: appimage=gcr.io/{{- required "app_project_id" .Values.app_project_id -}}/{{- .Values.app_name -}}/{{ "{{ app.lifecycle }}" }}/{{ "{{ path.basename }}" }}
        argocd-image-updater.argoproj.io/write-back-method: git

        argocd-image-updater.argoproj.io/appimage.pull-secret: pullsecret:argocd/gcr-credentials 
        argocd-image-updater.argoproj.io/appimage.force-update: "true"
        argocd-image-updater.argoproj.io/appimage.update-strategy: latest

        argocd.argoproj.io/sync-wave: '{{ "{{ app.syncWave }}" }}'
      finalizers:
      - resources-finalizer.argocd.argoproj.io
    spec:
      project: {{ .Values.argocd_project }}
      source:
        repoURL: git@github.com:{{- .Values.github_org -}}/{{- .Values.repo_name -}}.git
        targetRevision: {{ .Values.target_revision }}
        path: '{{ "{{ path }}" }}/web-app'
        helm:
          releaseName: '{{ "{{ app.lifecycle }}" }}-{{- .Values.app_name -}}-{{ "{{ path.basename }}" }}'
          ignoreMissingValueFiles: true
          values: |
            web-app:
              github_org: {{- .Values.github_org -}}
              project_id: {{ .Values.app_project_id }}
              sa_project_id: {{ .Values.sa_project_id }}
              app_code: {{ .Values.app_name }}
              domain: '{{ "{{ app.domain }}" }}'
              create_infra: false
              microservice_name: '{{ "{{ path.basename }}" }}'
              lifecycle: '{{ "{{ app.lifecycle }}" }}'
          valueFiles:
          - './services/{{ "{{ path.basename }}" }}.yaml'
          - './services/{{ "{{ path.basename }}" }}/{{ "{{ app.lifecycle }}" }}.yaml'
      destination:
        server: {{ .Values.app.server }}
        namespace: '{{ "{{ app.lifecycle }}" }}-{{- .Values.app_name -}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true


