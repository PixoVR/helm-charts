
argo-cd:
  fullnameOverride: argocd
  configs:
    cm:
      timeout.reconciliation: 90s
  server:
    config:
      # Fix crossplane unwanted pruning
      application.resourceTrackingMethod: annotation
      accounts.admin: apiKey
      accounts.viewer: login
      repositories: |
        - type: helm
          name: stable
          url: https://charts.helm.sh/stable
        - type: helm
          name: argo-cd
          url: https://argoproj.github.io/argo-helm
        - type: helm
          name: pixovr
          url: https://pixovr.github.io/helm-charts
        - type: helm
          name: bitnami
          url: oci://registry-1.docker.io/bitnamicharts
      resource.customizations.health.argoproj.io_Application: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs
      statusbadge.enabled: "true"
      resource.customizations.ignoreDifferences.admissionregistration.k8s.io_MutatingWebhookConfiguration: |
        jqPathExpressions:
        - '.webhooks[]?.clientConfig.caBundle'
      resource.customizations.ignoreDifferences.admissionregistration.k8s.io_ValidatingWebhookConfiguration: |
        jqPathExpressions:
        - '.webhooks[]?.clientConfig.caBundle'
        - '.webhooks[]?.failurePolicy'
      resource.compareoptions: |
        # disables status field diffing in specified resource types
        # 'crd' - CustomResourceDefinition-s (default)
        # 'all' - all resources
        # 'none' - disabled
        ignoreResourceStatusField: crd
      dex.config: |
        connectors:
        - type: github
          id: github
          name: GitHub
          config:
            clientID: $argocd-github-sso:oidc.auth0.clientId
            clientSecret: $argocd-github-sso:oidc.auth0.clientSecret
            orgs:
            - name: PixoVR
    
    service:
      type: ClusterIP
      annotations:
        cloud.google.com/neg: '{"ingress": true}'
        cloud.google.com/backend-config: '{"ports": {"http":"argocd-server"}}'

    extraArgs:
      - --insecure

    ingress:
      enabled: true
      ingressClassName: ""
      annotations: 
        networking.gke.io/managed-certificates: argocd-server
        networking.gke.io/v1beta1.FrontendConfig: argocd-server
        kubernetes.io/ingress.global-static-ip-name: argocd-ip

    GKEmanagedCertificate:
      enabled: true

    GKEbackendConfig:
      enabled: true
      spec:
        securityPolicy:
          name: no-russia
        iap:
          enabled: false
          oauthclientCredentials:
            secretName: oauth-credentials
        healthCheck:
          checkIntervalSec: 30
          timeoutSec: 5
          healthyThreshold: 1
          unhealthyThreshold: 2
          type: HTTP
          requestPath: /healthz
          port: 8080

    GKEfrontendConfig:
      enabled: true
      spec:
        sslPolicy: tls-12
        redirectToHttps:
          enabled: true
          responseCodeName: MOVED_PERMANENTLY_DEFAULT

    installCRDs: true
    # global:
    #   image:
    #     tag: v2.1.6
    configs:
      knownHosts:
        data:
          ssh_known_hosts: |
            github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC9CL3sd6oWoVzLMwRgHBCucs0GW/wJxcVt1+Oo+QoOQF3SJ7o4JhX5N5q3UjnLxJxxettxCybLgurfiiBXMmkB++OfO9CR626ItSsbAP6Bs23nD7/pvt9ebpGUnH7MkqpmnqKqvixGozZ7ZNXZzsMUCE+aoKgtyO3BMLwYMBBmv8OnqRnsaR6P+DrV7UHYVCNRaYNl21SZLdTbtNASRd3GmetuJVq9ZWf7vI3tdXCrMEAMdij//8dBAgdlD8Ub4Ea+vteQd2bPOzW8HXjFltroH0WSotTLMVMrjpYjlQDe1JGHRsbXGInYFu4fUCfMTNbsgwAoOHaeobq9cKtL0iEZ18c81HZiGJpaE0MfkuwzXJSJuiXoG4o7ZP+kH1Yoc5Ms4Hm3xwwhp4GVE3ExgRlKN8Glw948CByWcv9zHCRHZpisNBChDIa++qq6nM1CrKkwZNCvkmS5QYGHXNT5Cp5gQhiLwXBWGVWDaq7z31NQdSi4rohfLvaWRoCDnwZi4r0=



